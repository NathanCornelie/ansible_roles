---

# tasks file for wireguard_add_user
# - name: Creates config directory
#   ansible.builtin.file:
#     path: /etc/wireguard/ansible
#     state: directory
#     mode: "0755"
#   when: "'clients' in group_names"


# - name: Check if the file exists
#   stat:
#     path: /etc/wireguard/ansible/client.key
#   register: file_stat
#   when: "'clients' in group_names"

# - name: Generate Keyz
#   shell:
#     cmd: "wg genkey | tee client.key | wg pubkey > client.pub"
#     chdir: /etc/wireguard/ansible
#   when: "'clients' in group_names and (not file_stat.stat.exists or file_stat.stat.size == 0) "

# - name: Generate Public key
#   shell:
#     cmd: "cat client.key | wg pubkey > client.pub"
#     chdir: /etc/wireguard/ansible
#   when: " 'clients' in group_names"

# - name: get remote file contents
#   command: "cat /etc/wireguard/ansible/client.pub"
#   register: client_public_key
#   when: "'clients' in group_names"

# - name: get remote file contents
#   command: "cat /etc/wireguard/ansible/client.key"
#   register: client_private_key
#   when: "'clients' in group_names"

- name: get remote file contents
  command: "cat /etc/wireguard/ansible/server.pub"
  register: server_pub_key
  when: "'servers' in group_names"

- name: get remote file contents
  command: "cat /etc/wireguard/ansible/server.key"
  register: server_private_key
  when: "'servers' in group_names"


# - name: set clients vars
#   ansible.builtin.set_fact:
#     CLIENT_PRIVATE_KEY: "{{ client_private_key.stdout }}"
#     CLIENT_PUBLIC_KEY: "{{ client_public_key.stdout }}"
#   when: "'clients' in group_names"
   
- name: set servers vars
  ansible.builtin.set_fact:
    SERVER_PUBLIC_KEY: "{{ server_pub_key.stdout }}" 
    SERVER_PRIVATE_KEY: "{{ server_private_key.stdout }}" 
  when: "'servers' in group_names"


# - name: set servers vars
#   ansible.builtin.set_fact:
#     SERVER_PUBLIC_KEY: "{{ hostvars[ item ]['server_pub_key']['stdout'] }}" 
#   when: "'clients' in group_names"  
#   with_items:
#     - "{{ groups['servers'] }}"


# - name: Template a file to /etc/file.conf
#   ansible.builtin.template:
#     src: client.conf.j2
#     dest: /etc/wireguard/ansible/wg0.conf
#     owner: root
#     group: sudo
#     mode: "0644"
#   when: "'clients' in group_names"






  ######################################################

- name: Creates config directory
  ansible.builtin.file:
    path: /etc/wireguard/ansible/{{ item.name }}
    state: directory
    mode: "0755"
  with_items:
    - "{{ WIREGUARD_USERS }}"

- name: Generate Clients Keys
  include_tasks: gen_clients_keys.yml
  loop: "{{ WIREGUARD_USERS }}"
  loop_control:
    loop_var: item
  
- name: Build template list
  include_tasks: build_template_list.yml
  loop: "{{ WIREGUARD_USERS }}"
  loop_control:
    loop_var: item

- name: Template a file to /etc/file.conf
  ansible.builtin.template:
    src: server.conf.j2
    dest: /etc/wireguard/ansible/wg0.conf
    owner: root
    group: wheel
    mode: "0644"
  when: "'servers' in group_names"
